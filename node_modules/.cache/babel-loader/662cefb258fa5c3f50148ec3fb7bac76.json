{"ast":null,"code":"var _jsxFileName = \"/Users/mayk/Downloads/weather-widget/src/features/weather/Weather.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport styles from \"./Weather.module.css\";\nimport { fetchCurrentWeather, fetchWeatherForecast } from \"./weatherSlice\";\n\nconst Weather = () => {\n  const [city, setCity] = useState('Yangon');\n  const {\n    current,\n    loading,\n    error,\n    forecast\n  } = useSelector(state => state.weather);\n  const dispatch = useDispatch();\n  const today = moment().format('dddd, MMMM Do YYYY');\n\n  const onCityChanged = e => {\n    let {\n      value\n    } = e.target;\n    setCity(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getWeather({\n      city: city\n    }); // dispatch(fetchCurrentWeather(city))\n  };\n\n  const getWeather = payload => {\n    console.log(query);\n    const query = query.city ? `q=${query.city}` : `lat=${query.lat}&lon=${query.lon}`;\n    console.log(query); // dispatch(fetchCurrentWeather(query)).then(res => {\n    //     const {coord} = res.payload.data\n    //     dispatch(fetchWeatherForecast(coord))\n    // })\n  };\n\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude: lat,\n          longitude: lon\n        } = position.coords;\n        getWeather({\n          lat,\n          lon\n        });\n      });\n    } else {\n      getWeather({\n        city: 'Yangon'\n      });\n    }\n  }, [dispatch]);\n\n  const showSearchBox = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.form__input,\n    value: city,\n    onChange: onCityChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })));\n\n  const showCurrentWeather = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, current.name), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.current__icon,\n    src: `http://openweathermap.org/img/wn/${current.weather[0].icon}@2x.png`,\n    alt: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, current && current.main.temp, \" \\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.current__weather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, current.weather[0].description))); // daily forecast item\n\n\n  const showForecastWeather = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.forecast__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, forecast.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.forecast__daily,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, moment().add(index + 1, 'day').format('ddd')), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.forecast__icon,\n    src: `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`,\n    alt: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, item.temp.day, \" \\xB0C\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, moment(item.dt).local().format('dddd, MMMM Do YYYY'))))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, today), showSearchBox(), current && !loading && !error && showCurrentWeather(), forecast && !loading && !error && showForecastWeather(), loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Loading .....\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Data not found for \", city, \"...!\")));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/mayk/Downloads/weather-widget/src/features/weather/Weather.js"],"names":["React","useState","useEffect","useSelector","useDispatch","moment","styles","fetchCurrentWeather","fetchWeatherForecast","Weather","city","setCity","current","loading","error","forecast","state","weather","dispatch","today","format","onCityChanged","e","value","target","onSubmit","preventDefault","getWeather","payload","console","log","query","lat","lon","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","showSearchBox","form__input","showCurrentWeather","name","current__icon","icon","main","temp","current__weather","description","showForecastWeather","forecast__container","map","item","index","forecast__daily","add","forecast__icon","day","dt","local","background","container","date"],"mappings":"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","sourcesContent":["\nimport React, { useState,useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport styles from \"./Weather.module.css\";\nimport {\n    fetchCurrentWeather,\n    fetchWeatherForecast\n} from \"./weatherSlice\";\n\nconst Weather = () => {\n\n\tconst [city,setCity] = useState('Yangon')\n    const {current,loading,error,forecast} = useSelector(state => state.weather)\n    const dispatch = useDispatch()\n    const today = moment().format('dddd, MMMM Do YYYY')\n\n    const onCityChanged = (e) => {\n        let {value} = e.target\n        setCity(value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        getWeather({city: city})\n        // dispatch(fetchCurrentWeather(city))\n    }\n\n    const getWeather = (payload) => {\n        console.log(query)\n        const query = query.city ? `q=${query.city}` : `lat=${query.lat}&lon=${query.lon}`\n        console.log(query)\n        // dispatch(fetchCurrentWeather(query)).then(res => {\n        //     const {coord} = res.payload.data\n        //     dispatch(fetchWeatherForecast(coord))\n        // })\n        \n    }\n    \n    useEffect(() => {\n        if('geolocation' in navigator) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                const {latitude: lat,longitude: lon} = position.coords\n                getWeather({lat,lon})\n            });\n        } else {\n            getWeather({city: 'Yangon'})\n        }\n     }, [dispatch]);\n    \n     const showSearchBox = () => (\n       <div>\n            <form onSubmit={onSubmit}>\n                <input className={styles.form__input} value={city} onChange={onCityChanged}></input>\n                {/* <button className={styles.form__submit} onClick={onSubmit}>Search</button> */}\n            </form>\n       </div>\n     )\n\n    const showCurrentWeather = () => (\n        <div>\n            <h2>{current.name}</h2>\n            <img className={styles.current__icon} src={`http://openweathermap.org/img/wn/${current.weather[0].icon}@2x.png`} alt=\"weather\"></img>\n            <h1>{ current && current.main.temp} &#176;C</h1>\n            <div className={styles.current__weather}>\n                <h3>{current.weather[0].description}</h3>\n            </div>\n        </div>\n    )\n    \n    // daily forecast item\n    const showForecastWeather = () => (\n        <>\n            <div className={styles.forecast__container}>\n                {\n                    forecast.map((item,index) => (\n                        <div className={styles.forecast__daily} key={index}>\n                            <p>{moment().add(index+1, 'day').format('ddd')}</p>\n                            <img className={styles.forecast__icon} src={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`} alt=\"weather\"></img>\n                            <p>{item.temp.day} &#176;C</p>\n                            <p>{moment(item.dt).local().format('dddd, MMMM Do YYYY')}</p>\n                        </div>\n                    ))\n                }\n            </div>\n        </>\n    )\n\treturn (\n\t\t<div className={styles.background}>  \n           <div className={styles.container}>\n            <div className={styles.date}>\n                    {today}\n                </div>\n                {\n                    showSearchBox()\n                }\n                {\n                    current && !loading && !error &&\n                    showCurrentWeather()\n                }\n                {\n                    forecast && !loading && !error &&\n                    showForecastWeather()\n                }\n                {\n                    loading && \n                    <div>Loading .....</div>\n                }\n                {\n                    error && \n                    <div>Data not found for {city}...!</div>\n                }\n           </div>\n        </div>\n\t)\n}\n\nexport default Weather"]},"metadata":{},"sourceType":"module"}