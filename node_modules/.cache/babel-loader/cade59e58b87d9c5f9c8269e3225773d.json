{"ast":null,"code":"var _jsxFileName = \"/Users/mayk/Downloads/weather-widget/src/features/weather/Weather.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport Loader from '../loader/Loader';\nimport CurrentWeather from '../current/Current';\nimport DailyWeather from '../daily/Daily';\nimport styles from \"./Weather.module.css\";\nimport { fetchCurrentWeather, fetchWeatherForecast } from \"./weatherSlice\";\n\nconst Weather = () => {\n  const [city, setCity] = useState('Yangon');\n  const [isTyping, setIsTyping] = useState(false);\n  const {\n    current,\n    loading,\n    error,\n    forecast\n  } = useSelector(state => state.weather);\n  const dispatch = useDispatch();\n\n  const unixFormatter = (dt, format) => {\n    return moment(new Date(dt * 1000)).format(format);\n  };\n\n  const onCityChanged = e => {\n    setIsTyping(true);\n    setCity(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setIsTyping(false);\n    dispatch(fetchCurrentWeather(city));\n  };\n\n  useEffect(() => {\n    dispatch(fetchCurrentWeather(city)).then(res => {\n      const {\n        coord\n      } = res.payload.data;\n      dispatch(fetchWeatherForecast(coord));\n    });\n  }, [dispatch]);\n\n  const showCurrentDate = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, unixFormatter(current.dt, 'dddd, MMMM Do YYYY'));\n\n  const showSearchBox = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.form__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: styles.form__form,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.form__input,\n    value: city,\n    onChange: onCityChanged,\n    placeholder: \"Search by city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.form__submit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Search\"))); // Weather Forecast for next 5 days\n\n\n  const showForecastWeather = () => /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.forecast__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 44\n    }\n  }, forecast.map((item, index) => /*#__PURE__*/React.createElement(DailyWeather, {\n    item: item,\n    index: index,\n    unixFormatter: unixFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), \" \");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }\n  }, current && showCurrentDate(), showSearchBox(), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.weatherCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 42\n    }\n  }, current && !error && /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 40\n    }\n  }, current.name), \" \", /*#__PURE__*/React.createElement(CurrentWeather, {\n    current: current,\n    unixFormatter: unixFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 64\n    }\n  }, \" \"), \" \"), forecast && !error && showForecastWeather(), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }, \"City Not Found\")), \" \"));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/mayk/Downloads/weather-widget/src/features/weather/Weather.js"],"names":["React","useState","useEffect","useSelector","useDispatch","moment","Loader","CurrentWeather","DailyWeather","styles","fetchCurrentWeather","fetchWeatherForecast","Weather","city","setCity","isTyping","setIsTyping","current","loading","error","forecast","state","weather","dispatch","unixFormatter","dt","format","Date","onCityChanged","e","target","value","onSubmit","preventDefault","then","res","coord","payload","data","showCurrentDate","date","showSearchBox","form__container","form__form","form__input","form__submit","showForecastWeather","forecast__container","map","item","index","background","container","weatherCard","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport moment from \"moment\";\nimport Loader from '../loader/Loader';\nimport CurrentWeather from '../current/Current';\nimport DailyWeather from '../daily/Daily';\nimport styles from \"./Weather.module.css\";\n\nimport {fetchCurrentWeather, fetchWeatherForecast} from \"./weatherSlice\";\n\nconst Weather = () => {\n\n    const [city,\n        setCity] = useState('Yangon')\n    const [isTyping,\n        setIsTyping] = useState(false)\n    const {current, loading, error, forecast} = useSelector(state => state.weather)\n    const dispatch = useDispatch()\n\n    const unixFormatter = (dt, format) => {\n        return moment(new Date(dt * 1000)).format(format)\n    }\n\n    const onCityChanged = (e) => {\n        setIsTyping(true)\n        setCity(e.target.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setIsTyping(false)\n        dispatch(fetchCurrentWeather(city))\n    }\n\n    useEffect(() => {\n        dispatch(fetchCurrentWeather(city)).then(res => {\n            const {coord} = res.payload.data\n            dispatch(fetchWeatherForecast(coord))\n\n        })\n    }, [dispatch]);\n\n    const showCurrentDate = () => (\n        <div className={styles.date}>\n            {unixFormatter(current.dt, 'dddd, MMMM Do YYYY')}\n        </div>\n    )\n\n    const showSearchBox = () => (\n        <div className={styles.form__container}>\n            <form className={styles.form__form} onSubmit={onSubmit}>\n                <input\n                    className={styles.form__input}\n                    value={city}\n                    onChange={onCityChanged}\n                    placeholder=\"Search by city\"></input>\n                <button className={styles.form__submit} type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n\n    // Weather Forecast for next 5 days\n    const showForecastWeather = () => ( <> <div className={styles.forecast__container}>\n        {forecast.map((item, index) => (\n            <DailyWeather item={item} index={index} unixFormatter={unixFormatter}></DailyWeather>\n        ))\n}\n    </div> < />\n    )\n\n\treturn (\n\t\t<div className={styles.background}>  \n           <div className={styles.container}>\n                {\n                    current && showCurrentDate()\n                }\n                {\n                    showSearchBox()\n                }\n                {\n                    loading ? \n                    <Loader></Loader > : <div className={styles.weatherCard}>\n            {current && !error && ( <> <h2>{current.name}</h2> < CurrentWeather current = {\n                current\n            }\n            unixFormatter = {\n                unixFormatter\n            } > </CurrentWeather> < />\n                            )}\n            {forecast && !error && showForecastWeather()\n}\n            {error && <div>City Not Found</div>\n}\n        </div>\n} < /div>\n        </div >)\n}\n\nexport default Weather"]},"metadata":{},"sourceType":"module"}