{"ast":null,"code":"var _jsxFileName = \"/Users/mayk/Downloads/weather-widget/src/features/weather/Weather.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport Loader from '../loader/Loader';\nimport CurrentWeather from '../current/Current';\nimport DailyWeather from '../daily/Daily';\nimport styles from \"./Weather.module.css\";\nimport { fetchCurrentWeather, fetchWeatherForecast } from \"./weatherSlice\";\n\nconst Weather = () => {\n  const [city, setCity] = useState('Yangon');\n  const [isTyping, setIsTyping] = useState(false);\n  const {\n    current,\n    loading,\n    error,\n    forecast\n  } = useSelector(state => state.weather);\n  const dispatch = useDispatch();\n\n  const unixFormatter = (dt, format) => {\n    return moment(new Date(dt * 1000)).format(format);\n  };\n\n  const onCityChanged = e => {\n    setIsTyping(true);\n    setCity(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setIsTyping(false);\n    dispatch(fetchCurrentWeather(city));\n  };\n\n  useEffect(() => {\n    dispatch(fetchCurrentWeather(city)).then(res => {\n      const {\n        coord\n      } = res.payload.data;\n      dispatch(fetchWeatherForecast(coord));\n    });\n  }, [dispatch]);\n\n  const showCurrentDate = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, unixFormatter(current.dt, 'dddd, MMMM Do YYYY'));\n\n  const showSearchBox = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.form__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: styles.form__form,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.form__input,\n    value: city,\n    onChange: onCityChanged,\n    placeholder: \"Search by city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.form__submit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Search\"))); // daily forecast item\n\n\n  const showForecastWeather = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.forecast__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, forecast.map((item, index) => /*#__PURE__*/React.createElement(DailyWeather, {\n    item: item,\n    index: index,\n    unixFormatter: unixFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }\n  }, current && showCurrentDate(), showSearchBox(), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.weatherCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, !loading && current && !error && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }, current.name), /*#__PURE__*/React.createElement(CurrentWeather, {\n    current: current,\n    unixFormatter: unixFormatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  })), !loading && forecast && !error && showForecastWeather(), !loading && error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"City Not Found\"))));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/mayk/Downloads/weather-widget/src/features/weather/Weather.js"],"names":["React","useState","useEffect","useSelector","useDispatch","moment","Loader","CurrentWeather","DailyWeather","styles","fetchCurrentWeather","fetchWeatherForecast","Weather","city","setCity","isTyping","setIsTyping","current","loading","error","forecast","state","weather","dispatch","unixFormatter","dt","format","Date","onCityChanged","e","target","value","onSubmit","preventDefault","then","res","coord","payload","data","showCurrentDate","date","showSearchBox","form__container","form__form","form__input","form__submit","showForecastWeather","forecast__container","map","item","index","background","container","weatherCard","name"],"mappings":"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","sourcesContent":["\nimport React, { useState,useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport Loader from '../loader/Loader';\nimport CurrentWeather from '../current/Current';\nimport DailyWeather from '../daily/Daily';\nimport styles from \"./Weather.module.css\";\n\nimport {\n    fetchCurrentWeather,\n    fetchWeatherForecast\n} from \"./weatherSlice\";\n\nconst Weather = () => {\n\n\tconst [city,setCity] = useState('Yangon')\n    const [isTyping,setIsTyping] = useState(false)\n    const {current,loading,error,forecast} = useSelector(state => state.weather)\n    const dispatch = useDispatch()\n\n    const unixFormatter = (dt,format) => {\n        return moment(new Date(dt*1000)).format(format)\n    }\n\n    const onCityChanged = (e) => {\n        setIsTyping(true)\n        setCity(e.target.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setIsTyping(false)\n        dispatch(fetchCurrentWeather(city))\n    }\n    \n    useEffect(() => {\n        dispatch(fetchCurrentWeather(city)).then(res => {\n            const {coord} = res.payload.data\n            dispatch(fetchWeatherForecast(coord))\n            \n        })\n     }, [dispatch]);\n\n    const showCurrentDate = () => (\n        <div className={styles.date}>\n            {unixFormatter(current.dt,'dddd, MMMM Do YYYY')}\n        </div>\n    )\n    \n     const showSearchBox = () => (\n       <div className={styles.form__container}>\n            <form className={styles.form__form} onSubmit={onSubmit}>\n                <input className={styles.form__input} value={city} onChange={onCityChanged} placeholder=\"Search by city\"></input>\n                <button className={styles.form__submit} type=\"submit\">Search</button>\n            </form>\n       </div>\n     )\n    \n    // daily forecast item\n    const showForecastWeather = () => (\n        <>\n            <div className={styles.forecast__container}>\n                {\n                    forecast.map((item,index) => (\n                        <DailyWeather \n                            item={item} \n                            index={index} \n                            unixFormatter={unixFormatter}\n                        >\n                        </DailyWeather>\n                    ))\n                }\n            </div>\n        </>\n    )\n\n\treturn (\n\t\t<div className={styles.background}>  \n           <div className={styles.container}>\n                {\n                    current && showCurrentDate()\n                }\n                {\n                    showSearchBox()\n                }\n                {\n                    loading && \n                    (\n                        <Loader></Loader>\n                    )\n                }\n                <div className={styles.weatherCard}>\n                    \n                    {\n                        !loading && current && !error &&\n                        (\n                        <>\n                                <h2>{current.name}</h2>\n                                <CurrentWeather current={current} unixFormatter={unixFormatter}></CurrentWeather>\n                        </>\n                        )\n                    }\n                    {\n                        !loading && forecast && !error &&\n                        showForecastWeather()\n                    }\n                    {\n                        !loading && error &&\n                        <div>City Not Found</div>\n                    }\n                </div>\n           </div>\n        </div>\n\t)\n}\n\nexport default Weather"]},"metadata":{},"sourceType":"module"}