{"ast":null,"code":"var _jsxFileName = \"/Users/mayk/Downloads/weather-widget/src/features/weather/Weather.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport loader from '../loader/Loader';\nimport CurrentWeather from '../current.js/Current';\nimport styles from \"./Weather.module.css\";\nimport { fetchCurrentWeather, fetchWeatherForecast } from \"./weatherSlice\";\n\nconst Weather = () => {\n  const [city, setCity] = useState('Yangon');\n  const [isTyping, setIsTyping] = useState(false);\n  const {\n    current,\n    loading,\n    error,\n    forecast\n  } = useSelector(state => state.weather);\n  const dispatch = useDispatch();\n\n  const unixFormatter = (dt, format) => {\n    return moment(new Date(dt * 1000)).format(format);\n  };\n\n  const onCityChanged = e => {\n    setIsTyping(true);\n    setCity(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setIsTyping(false);\n    dispatch(fetchCurrentWeather(city));\n  };\n\n  useEffect(() => {\n    dispatch(fetchCurrentWeather(city)).then(res => {\n      const {\n        coord\n      } = res.payload.data;\n      dispatch(fetchWeatherForecast(coord));\n    });\n  }, [dispatch]);\n\n  const showCurrentDate = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, unixFormatter(current.dt, 'dddd, MMMM Do YYYY'));\n\n  const showSearchBox = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.form__input,\n    value: city,\n    onChange: onCityChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }))); // daily forecast item\n\n\n  const showForecastWeather = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.forecast__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, forecast.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.forecast__daily,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, unixFormatter(item.dt, 'ddd')), /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.forecast__icon,\n    src: `http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`,\n    alt: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, item.temp.day, \" \\xB0C\")))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }\n  }, current && showCurrentDate(), showSearchBox(), loading && loader(), !loading && current && !error && CurrentWeather(), !loading && forecast && !error && showForecastWeather(), !loading && error && !isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Data not found for \", city, \"...!\")));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/mayk/Downloads/weather-widget/src/features/weather/Weather.js"],"names":["React","useState","useEffect","useSelector","useDispatch","moment","loader","CurrentWeather","styles","fetchCurrentWeather","fetchWeatherForecast","Weather","city","setCity","isTyping","setIsTyping","current","loading","error","forecast","state","weather","dispatch","unixFormatter","dt","format","Date","onCityChanged","e","target","value","onSubmit","preventDefault","then","res","coord","payload","data","showCurrentDate","date","showSearchBox","form__input","showForecastWeather","forecast__container","map","item","index","forecast__daily","forecast__icon","icon","temp","day","background","container"],"mappings":"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","sourcesContent":["\nimport React, { useState,useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport loader from '../loader/Loader';\nimport CurrentWeather from '../current.js/Current';\nimport styles from \"./Weather.module.css\";\nimport {\n    fetchCurrentWeather,\n    fetchWeatherForecast\n} from \"./weatherSlice\";\n\nconst Weather = () => {\n\n\tconst [city,setCity] = useState('Yangon')\n    const [isTyping,setIsTyping] = useState(false)\n    const {current,loading,error,forecast} = useSelector(state => state.weather)\n    const dispatch = useDispatch()\n\n    const unixFormatter = (dt,format) => {\n        return moment(new Date(dt*1000)).format(format)\n    }\n\n    const onCityChanged = (e) => {\n        setIsTyping(true)\n        setCity(e.target.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        setIsTyping(false)\n        dispatch(fetchCurrentWeather(city))\n    }\n    \n    useEffect(() => {\n        dispatch(fetchCurrentWeather(city)).then(res => {\n            const {coord} = res.payload.data\n            dispatch(fetchWeatherForecast(coord))\n            \n        })\n     }, [dispatch]);\n\n    const showCurrentDate = () => (\n        <div className={styles.date}>\n            {unixFormatter(current.dt,'dddd, MMMM Do YYYY')}\n        </div>\n    )\n    \n     const showSearchBox = () => (\n       <div>\n            <form onSubmit={onSubmit}>\n                <input className={styles.form__input} value={city} onChange={onCityChanged}></input>\n            </form>\n       </div>\n     )\n    \n    // daily forecast item\n    const showForecastWeather = () => (\n        <>\n            <div className={styles.forecast__container}>\n                {\n                    forecast.map((item,index) => (\n                        <div className={styles.forecast__daily} key={index}>\n                            <p>{unixFormatter(item.dt,'ddd')}</p>\n                            <img className={styles.forecast__icon} src={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`} alt=\"weather\"></img>\n                            <p>{item.temp.day} &#176;C</p>\n                        </div>\n                    ))\n                }\n            </div>\n        </>\n    )\n\n\treturn (\n\t\t<div className={styles.background}>  \n           <div className={styles.container}>\n                {\n                    current && showCurrentDate()\n                }\n                {\n                    showSearchBox()\n                }\n                {\n                    loading && \n                    loader()\n                }\n                {\n                    !loading && current && !error &&\n                    CurrentWeather()\n                }\n                {\n                    !loading && forecast && !error &&\n                    showForecastWeather()\n                }\n                {\n                    !loading && error && !isTyping &&\n                    <div>Data not found for {city}...!</div>\n                }\n           </div>\n        </div>\n\t)\n}\n\nexport default Weather"]},"metadata":{},"sourceType":"module"}