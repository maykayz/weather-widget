{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport weatherAPI from \"../../api\";\nconst sliceName = \"weather\";\nexport const fetchCurrentWeather = createAsyncThunk(`${sliceName}/fetchCurrentWeather`, city => weatherAPI.fetchCurrentWeather({\n  query: city\n}));\nexport const fetchWeatherForecast = createAsyncThunk(`${sliceName}/fetchWeatherForecast`, ({\n  lat,\n  lon\n}) => weatherAPI.fetchWeatherForecast({\n  lat,\n  lon\n}));\nexport const weatherSlice = createSlice({\n  name: sliceName,\n  initialState: {\n    current: null,\n    loading: true,\n    error: null\n  },\n  reducers: {\n    setCurrent: (state, action) => {\n      state.current = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchCurrentWeather.pending]: (state, {\n      payload,\n      meta\n    }) => {\n      state.loading = true;\n    },\n    [fetchCurrentWeather.fulfilled]: (state, {\n      payload,\n      meta\n    }) => {\n      state.loading = false;\n      state.current = payload.data;\n    },\n    [fetchCurrentWeather.rejected]: (state, {\n      error,\n      meta\n    }) => {\n      state.loading = false;\n      console.log(error.status);\n      state.error = error;\n    }\n  }\n});\nconst {\n  actions: weatherAction,\n  reducer: weatherReducer\n} = weatherSlice;\nexport { weatherAction, weatherReducer };\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["/Users/mayk/Downloads/weather-widget/src/features/weather/weatherSlice.js"],"names":["createSlice","createAsyncThunk","weatherAPI","sliceName","fetchCurrentWeather","city","query","fetchWeatherForecast","lat","lon","weatherSlice","name","initialState","current","loading","error","reducers","setCurrent","state","action","payload","extraReducers","pending","meta","fulfilled","data","rejected","console","log","status","actions","weatherAction","reducer","weatherReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAOC,UAAP,MAAuB,WAAvB;AAEA,MAAMC,SAAS,GAAG,SAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAGH,gBAAgB,CAC9C,GAAEE,SAAU,sBADkC,EAE9CE,IAAD,IAAUH,UAAU,CAACE,mBAAX,CAA+B;AAAEE,EAAAA,KAAK,EAAED;AAAT,CAA/B,CAFqC,CAA5C;AAKP,OAAO,MAAME,oBAAoB,GAAGN,gBAAgB,CAC/C,GAAEE,SAAU,uBADmC,EAEhD,CAAC;AAAEK,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAkBP,UAAU,CAACK,oBAAX,CAAgC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAhC,CAF8B,CAA7C;AAKP,OAAO,MAAMC,YAAY,GAAGV,WAAW,CAAC;AACpCW,EAAAA,IAAI,EAAER,SAD8B;AAEpCS,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,IADC;AAEVC,IAAAA,OAAO,EAAE,IAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFsB;AAOpCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC1BD,MAAAA,KAAK,CAACL,OAAN,GAAgBM,MAAM,CAACC,OAAvB;AACH;AAHK,GAP0B;AAYpCC,EAAAA,aAAa,EAAE;AACX,KAACjB,mBAAmB,CAACkB,OAArB,GAA+B,CAACJ,KAAD,EAAQ;AAAEE,MAAAA,OAAF;AAAWG,MAAAA;AAAX,KAAR,KAA8B;AACzDL,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACV,mBAAmB,CAACoB,SAArB,GAAiC,CAACN,KAAD,EAAQ;AAAEE,MAAAA,OAAF;AAAWG,MAAAA;AAAX,KAAR,KAA8B;AAC3DL,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACL,OAAN,GAAgBO,OAAO,CAACK,IAAxB;AACH,KAPU;AAQX,KAACrB,mBAAmB,CAACsB,QAArB,GAAgC,CAACR,KAAD,EAAQ;AAAEH,MAAAA,KAAF;AAASQ,MAAAA;AAAT,KAAR,KAA4B;AACxDL,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,MAAlB;AACAX,MAAAA,KAAK,CAACH,KAAN,GAAcA,KAAd;AACH;AAZU;AAZqB,CAAD,CAAhC;AA4BP,MAAO;AAAEe,EAAAA,OAAO,EAAEC,aAAX;AAA0BC,EAAAA,OAAO,EAAEC;AAAnC,IAAsDvB,YAA7D;AAEA,SAAQqB,aAAR,EAAuBE,cAAvB;AAEA,eAAevB,YAAY,CAACsB,OAA5B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport weatherAPI from \"../../api\";\n\nconst sliceName = \"weather\";\n\nexport const fetchCurrentWeather = createAsyncThunk(\n    `${sliceName}/fetchCurrentWeather`,\n    (city) => weatherAPI.fetchCurrentWeather({ query: city })\n);\n\nexport const fetchWeatherForecast = createAsyncThunk(\n    `${sliceName}/fetchWeatherForecast`,\n    ({ lat, lon }) => weatherAPI.fetchWeatherForecast({ lat, lon })\n);\n\nexport const weatherSlice = createSlice({\n    name: sliceName,\n    initialState: {\n        current: null,\n        loading: true,\n        error: null,\n    },\n    reducers: {\n        setCurrent: (state,action) => {\n            state.current = action.payload\n        }\n    },\n    extraReducers: {\n        [fetchCurrentWeather.pending]: (state, { payload, meta }) => {\n            state.loading = true;\n        },\n        [fetchCurrentWeather.fulfilled]: (state, { payload, meta }) => {\n            state.loading = false;\n            state.current = payload.data;\n        },\n        [fetchCurrentWeather.rejected]: (state, { error, meta }) => {\n            state.loading = false;\n            console.log(error.status)\n            state.error = error;\n        },\n    },\n});\n\nconst  { actions: weatherAction, reducer: weatherReducer } = weatherSlice\n\nexport {weatherAction, weatherReducer};\n\nexport default weatherSlice.reducer;"]},"metadata":{},"sourceType":"module"}